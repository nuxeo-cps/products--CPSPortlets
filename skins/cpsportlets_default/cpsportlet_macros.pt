<!-- RSS 1.0 export -->
<metal:block define-macro="export_rss_1_0"
  tal:define="export_script nocall:here/cpsportlet_export_rss_1_0">
  <metal:block use-macro="here/cpsportlet_macros/macros/syndication" />
</metal:block>

<!-- RSS 2.0 export -->
<metal:block define-macro="export_rss_2_0"
  tal:define="export_script nocall:here/cpsportlet_export_rss_2_0">
  <metal:block use-macro="here/cpsportlet_macros/macros/syndication" />
</metal:block>

<!-- ATOM 0.3 export -->
<metal:block define-macro="export_atom_0_3"
  tal:define="export_script nocall:here/cpsportlet_export_atom_0_3">
  <metal:block use-macro="here/cpsportlet_macros/macros/syndication" />
</metal:block>

<!-- Not implemented or unknown export format-->
<metal:block define-macro="export_not_implemented">
  <strong tal:content="export" />:
  <span i18n:translate="">this export format has not been implemented yet</span>.
</metal:block>

<!-- Syndication -->
<metal:block define-macro="syndication">
  <tal:block define="url string:${request/URL}?${request/QUERY_STRING};
                     utool nocall:here/portal_url;
                     portal python: utool.getPortalObject();
		     folder_title python: portal.restrictedTraverse(ds.get('folder_path', ''), portal).Title()"
   content="structure python: export_script(portal=portal, box=ds, items=items, folder_title=folder_title, url=url, context=here, request=request)" />
</metal:block>

<!-- Display export buttons -->
<tal:comment condition="nothing">
 TODO GR: reimplement path query argument (not used for content portlets)
</tal:comment>

<metal:block define-macro="xml_export_link_new_style"
             tal:define="exts_voc vtool/cpsportlets_export_extensions|nothing;
                         ptlid portlet/getId;
                         base_url here/portal_url/getBaseUrl;
			 contextual_export contextual_export|python:True;
	                 exporturl python: portlet.viewAbsoluteUrlPath(format, context_obj=test(contextual_export, context, None))">

 <a i18n:attributes="title"
    tal:omit-tag="python:not voc.has_key(format)"
    tal:define="ext python: exts_voc and exts_voc.get(format) or 'xml';
                export_name python: ext and ptlid + '.' + ext or ptlid;"
    tal:attributes="href string:${exporturl}/${export_name};
		    title string:cpsportlets_syndication_${format}_help">
  <img tal:attributes="src string:${base_url}syndication_icon-28.png;
                       alt python:voc.get(format);
                       title python:voc.getMsgid(key=format);"
       i18n:attributes="title" />
 </a>
</metal:block>

<metal:block define-macro="xml_export_link_old_style">
 <a i18n:attributes="title"
    tal:define="path path|nothing;
                base_url here/portal_url/getBaseUrl;
                "
    tal:omit-tag="python:not voc.has_key(format)"
    tal:attributes="href string:${portlet/absolute_url}?export=${format}&path=${path};
		    title string:cpsportlets_syndication_${format}_help">
  <img
    tal:attributes="src string:${base_url}syndication_icon-28.png;
		    alt python:voc.get(format);
		    title python:voc.getMsgid(key=format);"
    i18n:attributes="title"
    />
 </a>
</metal:block>

<metal:block define-macro="xml_exports"
  tal:define="formats ds/syndication_formats;
              short_syndication_formats ds/short_syndication_formats|nothing;
              base_url here/portal_url/getBaseUrl;
              portlet nocall:options/portlet|nothing;"
  tal:condition="python: formats and portlet">
  <div class="xmlExportButtons contentPortletFeeds"
       tal:define="vtool here/portal_vocabularies;
                   export_new_style export_new_style|nothing;
                   voc vtool/cpsportlets_syndication_formats_voc">
    <tal:block repeat="format formats">
     <tal:block condition="export_new_style">
      <metal:block
	use-macro="here/cpsportlet_macros/macros/xml_export_link_new_style" />
     </tal:block>
     <tal:block condition="not:export_new_style">
      <metal:block
	use-macro="here/cpsportlet_macros/macros/xml_export_link_old_style" />
     </tal:block>
    </tal:block>
  </div>
</metal:block>

<metal:block define-macro="view_tree"
  tal:define="children python:context.getNodeChildren(folderItems, node);
  branch python:'branch:' + node.get('url').replace('/', ':');
  selected_heir python:context.hasSelectedHeir(folderItems, node);
  base_url here/portal_url/getBaseUrl;
  branch_display python:test(
    selected_heir or node['selected'], 'block', 'none');"
  tal:condition="python:children">
  <div tal:attributes="id branch;style string:display:${branch_display};">
    <tal:block repeat="node children">
      <ul tal:define="path_node python:node.get('url').replace('/', ':');
        sub_branch string:branch:${path_node};
        folder string:folder:${path_node};
        children_branch python:context.getNodeChildren(folderItems, node);
        branch_selected_heir python:context.hasSelectedHeir(folderItems, node);
        branch_class python:test(children_branch, 'tree_node', 'tree_leaf');
        toggle_icon python:test(branch_selected_heir or node['selected'],
          toggle_minus, toggle_plus);" tal:attributes="class branch_class">
        <li>
          <div class="toggle_icon">
            <img tal:attributes="
                src string:${base_url}cpsskins_images/${toggle_icon};
                id folder;
                alt toggle_icon;
                onclick string:showBranch('${sub_branch}');;
                  swapFolder('${folder}', '${toggle_plus}', '${toggle_minus}');;"
                tal:condition="children_branch"/>
          </div>
          <ul tal:attributes="style string:padding: 0px">
            <li tal:attributes="class python:
                node['selected'] and 'selected' or None">
              <div class="droppable-in" tal:attributes="id python:'url:%s' % node['url'].replace('/', '.')">
                <a tal:condition="node/visible"
                    tal:attributes="href node/url;
                    class linkclass">
                    <tal:block condition="show_icons"
                        content="structure node/icon_tag" />
                    <tal:block content="node/title" />
                </a>
              </div>
            </li>
          </ul>
          <metal:block use-macro="here/cpsportlet_macros/macros/view_tree" />
        </li>
      </ul>
    </tal:block>
  </div>
</metal:block>
