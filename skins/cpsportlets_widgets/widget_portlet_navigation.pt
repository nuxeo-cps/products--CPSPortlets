<tal:block define="utool nocall:here/portal_url;
                   export request/form/export|nothing;
                   ds options/datastructure;
                   display ds/display;
                   show_docs ds/show_docs;
                   display_hidden_folders ds/display_hidden_folders;
                   display_description ds/display_description;
                   display_description python: int(display_description);
                   display_managers ds/display_managers;
                   display_managers python:int(display_managers);
                   authorized_only ds/authorized_only;
                   syndication_formats ds/syndication_formats|python:[];
                   start_depth python: 2;
                   root_uids ds/root_uids;
                   context nocall:options/context_obj|here;
                   context_rpath python: utool.getRelativeUrl(context)">

<tal:block condition="not:export">

<script type="text/javascript"
        tal:condition="python: display == 'expandable_tree'">
function showBranch(branch){
  var objBranch = document.getElementById(branch).style;
  if(objBranch.display!="none")
    objBranch.display="none";
  else
    objBranch.display="block";
}

function swapFolder(img, toggle_plus, toggle_minus){
  objImg = document.getElementById(img);
  if(objImg){
    indexPlus = objImg.src.indexOf(toggle_plus);
    if(indexPlus > -1){
      srcBase = objImg.src.substring(0,indexPlus);
      objImg.src = srcBase + toggle_minus;
    }
    else{
      indexMinus = objImg.src.indexOf(toggle_minus);
      srcBase = objImg.src.substring(0,indexMinus);
      objImg.src = srcBase + toggle_plus;
    }
  }
}

</script>

  <tal:block condition="python: display == 'vertical_breadcrumbs_menu'">
    <tal:block
     define="rel_depth ds/rel_depth;
             trailItems python: context.getBreadcrumbsItems(url=context_rpath, display_hidden_folders=display_hidden_folders);
             folderItems python: context.getFolderItems(context_obj=context, show_docs=show_docs, display_hidden_folders=display_hidden_folders);
             trailItems python: trailItems[int(rel_depth):];
             depth python: len(trailItems)">
      <h1 style="margin:0" tal:condition="python: depth >= 1">
        <a tal:define="item python: trailItems[0]"
           tal:attributes="href item/url"
           tal:content="item/title" /><br/>
        <tal:block tal:repeat="item folderItems" tal:condition="python: depth == 1">
          <br/><br/><a tal:content="item/title" tal:attributes="href item/url" />
        </tal:block>
      </h1>
      <h2 style="margin:0" tal:condition="python: depth >= 2">
        <a tal:define="item python: trailItems[1]"
           tal:attributes="href item/url"
           tal:content="item/title" /><br/>
        <tal:block tal:repeat="item folderItems" tal:condition="python: depth == 2">
          <br/><br/><a tal:content="item/title" tal:attributes="href item/url" />
        </tal:block>
      </h2>
      <h3 style="margin:0" tal:condition="python: depth >= 3">
        <a tal:define="item python: trailItems[2]"
           tal:attributes="href item/url"
           tal:content="item/title" /><br/>
        <tal:block tal:repeat="item folderItems" tal:condition="python: depth == 3">
          <br/><br/><a tal:content="item/title" tal:attributes="href item/url" />
        </tal:block>
      </h3>
      <tal:block repeat="level python: range(3,depth)">
        <h4 style="margin:0">
          <a tal:define="item python: trailItems[level]"
             tal:attributes="href item/url"
             tal:content="item/title" /><br/>
          <tal:block tal:repeat="item folderItems" tal:condition="python: level == depth">
            <br/><br/><a tal:content="item/title" tal:attributes="href item/url" />
          </tal:block>
        </h4>
      </tal:block>
    </tal:block>
  </tal:block>

  <tal:block condition="python: display == 'folder_contents'">
    <tal:block
     define="folderItems python: here.getFolderItems(context_obj=context,
                                                     **dict(ds))"
     condition="folderItems">
      <ul class="cpsskinsMenu">
        <li tal:repeat="item folderItems">
          <a tal:attributes="href item/url">
            <tal:block content="item/title" />
            <span class="itemDescription"
             tal:define="description item/description"
             tal:condition="python: description and display_description"
             tal:content="description" />
          </a>
        </li>
      </ul>
    </tal:block>
  </tal:block>

  <tal:block condition="python: display == 'up_to_parent'">
    <tal:block define="item context/getParentItem"
     condition="item">
      <a tal:attributes="href item/url">
        <tal:block content="structure item/icon" />
        <span i18n:translate="cpsportlets_up_to">Up to
          <strong i18n:name="up_id" tal:content="item/title">id</strong>
        </span>
      </a>
    </tal:block>
  </tal:block>

  <tal:block condition="python: display == 'folder_contents_detailed'">
    <tal:block define="
        cpsmcat nocall:here/translation_service;
        base_url utool/getBaseUrl;
        sort_by ds/sort_by|nothing;
        sort_direction ds/sort_direction|nothing;
        items python: context.getFolderContents(sort_by=sort_by,
                                                direction=sort_direction);
        format string:one_column;
        no_form python:1;">
      <metal:block use-macro="here/content_lib_display_contents/macros/display_contents" />
    </tal:block>
  </tal:block>

  <tal:block condition="python: display == 'folder_contents_dropdown_list'">
    <form method="get" action="cpsportlet_url_redirect"
    tal:define="folderItems python: here.getFolderItems(
                context_obj=context,
                **dict(ds))"
    tal:condition="folderItems">
      <select onchange="submit()" name="url">
        <option value="" selected="selected">...</option>
        <tal:block repeat="item folderItems">
          <option value=""
          tal:define="item_url item/url"
          tal:content="item/title"
          tal:attributes="value item_url" />
        </tal:block>
      </select>
    </form>
  </tal:block>

  <tal:block condition="python: display == 'subfolder_contents'">
    <tal:block
     define="folderItems python: context.getNavigationItems(root_uids=root_uids, context_rpath=context_rpath, context_obj=context, start_depth=1, end_depth=3, contextual=1, expand=1, display_hidden_folders=display_hidden_folders)"
     condition="folderItems">
       <tal:block repeat="item folderItems">
         <tal:block tal:define="depth item/depth">
           <p tal:condition="python: depth == 1">
             <a href="" tal:attributes="href item/url">
               <tal:block content="structure item/icon_tag" />
               <strong tal:content="item/title" />
             </a>
           </p>
           <tal:block tal:condition="python: depth == 2">
             <a tal:content="item/title" tal:attributes="href item/url" />,
             <span class="itemDescription"
              tal:define="description item/description"
              tal:condition="python: description and display_description"
              tal:content="description" />
           </tal:block>
         </tal:block>
       </tal:block>
    </tal:block>
  </tal:block>

  <tal:block condition="python: display == 'navigation_tree'">
    <tal:block
     define="show_icons ds/show_icons;
             show_icons python: int(show_icons);
             contextual ds/contextual;
             end_depth ds/end_depth;
             folderItems python: context.getNavigationItems(
                 root_uids=root_uids,
                 context_rpath=context_rpath,
                 context_obj=context,
                 contextual=contextual,
                 start_depth=int(start_depth),
                 end_depth=int(end_depth),
                 display_description=display_description,
                 display_hidden_folders=display_hidden_folders,
                 );
             linkclass python: show_icons and 'noicon' or None"
     condition="folderItems">
      <ul class="cpsskinsMenu">
        <li tal:repeat="item folderItems"
        tal:attributes="class python: item['selected'] and 'selected' or None">
          <div class="droppable-in" tal:attributes="id python:'url:%s' % item['url'].replace('/', '.')">
             <a tal:define="style string:margin-left:${item/depth}em"
                 tal:condition="item/visible"
                 tal:attributes="style style; href item/url;
                                 class python:linkclass">
                 <tal:block condition="show_icons"
                  content="structure item/icon_tag" />
                 <tal:block content="item/title" />
                 <span class="itemDescription"
                  tal:define="description item/description"
                  tal:condition="python: description and display_description"
                  tal:content="description" />
             </a>
         </div>
        </li>
      </ul>
    </tal:block>
  </tal:block>

  <tal:block condition="python: display == 'dynamic_tree'">
    <tal:block tal:define="dummy python:request.set('ds', ds);
                           context_url context/absolute_url_path;
                           dummy python:request.set('context_url', context_url);
                           contextual python:ds.get('contextual', True);
                           end_depth python:ds.get('end_depth', 0);
                           folder_prefixes python:ds.get('folder_prefixes', []);
                           folderItems python: context.getNavigationItems(
                                                root_uids=root_uids,
                                                context_rpath=context_rpath,
                                                context_obj=context,
                                                contextual=0, expand=1,
                                                folder_prefixes=folder_prefixes,
                                                end_depth=int(end_depth),
                                                display_description=display_description,
                                                display_hidden_folders=display_hidden_folders,
                                                );
                           dummy python:request.set('folderItems', folderItems);
                                                ">
      <tal:block tal:content="structure context/getTreeView"/>
    </tal:block>

  </tal:block>

  <tal:block condition="python: display == 'expandable_tree'">
    <tal:block
     define="show_icons ds/show_icons;
             show_icons python: int(show_icons);
             contextual ds/contextual;
             end_depth ds/end_depth;
             folder_prefixes ds/folder_prefixes|python:[];
             folderItems python: context.getNavigationItems(
                 root_uids=root_uids,
                 context_rpath=context_rpath,
                 context_obj=context,
                 contextual=0, expand=1,
                 folder_prefixes=folder_prefixes,
                 end_depth=int(end_depth),
                 display_description=display_description,
                 display_hidden_folders=display_hidden_folders,
                 );
             linkclass python: show_icons and 'noicon' or None;
             base_url python: request.get('cpsskins_base_url');
             tree_roots python:[item for item in folderItems
               if item.get('level') == 0];
             root_has_nephew python:[1 for item in tree_roots if
               context.getNodeChildren(folderItems, item)];
             toggle_plus string:toggle_plus.png;
             toggle_minus string:toggle_minus.png;"
     condition="folderItems">

     <tal:block repeat="node tree_roots" >
       <ul tal:define="node_path python:node.get('url').replace('/', ':');
         branch string:branch:${node_path};
         folder string:folder:${node_path};
         selected_heir python:context.hasSelectedHeir(folderItems, node);
         grandchildren python:context.getNodeChildren(folderItems, node, 2);
         toggle_icon python:test(selected_heir or node['selected'],
           toggle_minus, toggle_plus);"
         class="cpsskinsMenu">
         <li tal:define="children_branch
             python:context.getNodeChildren(folderItems, node);">
           <div class="toggle_icon">
             <img tal:attributes="src
                 string:${base_url}cpsskins_images/${toggle_icon};
               id folder;
               alt toggle_icon;
               onclick string:showBranch('${branch}');;
               swapFolder('${folder}', '${toggle_plus}', '${toggle_minus}');;"
               tal:condition="python:children_branch" />
           </div>
           <div tal:condition="python: (not children_branch) and root_has_nephew"
             class="missing_toggle">
             &nbsp;
           </div>
           <ul style="padding: 0px">
             <li tal:attributes="class python:
                 node['selected'] and 'selected' or None">
               <div class="droppable-in" tal:attributes="id python:'url:%s'
                                         % node['url'].replace('/', '.')">
               <a tal:condition="node/visible"
                 tal:attributes="href node/url;
                 class linkclass">
                 <tal:block condition="show_icons"
                   content="structure node/icon_tag" />
                 <tal:block content="node/title" />
               </a>
               </div>
             </li>
           </ul>
           <metal:block use-macro="here/cpsportlet_macros/macros/view_tree" />
         </li>
       </ul>
       <div style="clear:left"></div>
     </tal:block>

    </tal:block>
  </tal:block>

  <tal:block condition="python: display == 'site_map'">
    <tal:block
     define="show_icons ds/show_icons;
             show_icons python: int(show_icons);
             contextual ds/contextual;
             end_depth ds/end_depth;
             folder_prefixes ds/folder_prefixes|python:[];
             folderItems python: context.getNavigationItems(
                 root_uids=root_uids,
                 context_rpath=context_rpath,
                 context_obj=context,
                 contextual=0, expand=1,
                 folder_prefixes=folder_prefixes,
                 end_depth=int(end_depth),
                 display_description=display_description,
                 display_hidden_folders=display_hidden_folders,
                 );
             linkclass python: show_icons and 'noicon' or None"
     condition="folderItems">
      <ul class="cpsskinsMenu">
        <li tal:repeat="item folderItems"
        tal:attributes="class python: item['selected'] and 'selected' or None">
          <a tal:define="style string:margin-left:${item/depth}em"
             tal:condition="item/visible"
             tal:attributes="style style;
                             href item/url;
                             class linkclass">
            <tal:block condition="show_icons"
             content="structure item/icon_tag" />
            <tal:block content="item/title" />
            <span class="itemDescription"
             tal:define="description item/description"
             tal:condition="python: description and display_description"
             tal:content="description" />
          </a>
        </li>
      </ul>
    </tal:block>
  </tal:block>

  <tal:block condition="python: display == 'site_map_3_tabs'">
      <tal:block define="show_icons ds/show_icons;
                show_icons python: int(show_icons);
                contextual ds/contextual;
                end_depth ds/end_depth;
                folder_prefixes ds/folder_prefixes|python:[];
                folderItems python: context.getNavigationItems(
                    root_uids=root_uids,
                    context_rpath=context_rpath,
                    context_obj=context,
                    contextual=0, expand=1,
                    folder_prefixes=folder_prefixes,
                    end_depth=int(end_depth),
                    display_description=display_description,
                    display_hidden_folders=display_hidden_folders,);
                linkclass python: show_icons and 'noicon' or None;
                folderItems python: folderItems + context.getMembersTab(
                    context_rpath=context_rpath)"
                condition="folderItems">
          <ul class="cpsskinsMenu">
              <li tal:repeat="item folderItems"
                  tal:attributes="class python: item['selected_tab'] and 'selected' or None">
                  <a tal:define="style string:margin-left:${item/depth}em"
                     tal:condition="item/visible"
                     tal:attributes="style style;
                     href item/url;
                     class linkclass">
                      <tal:block condition="show_icons"
                                 content="structure item/icon_tag" />
                      <tal:block content="item/title" />
                      <span class="itemDescription"
                            tal:define="description item/description"
                            tal:condition="python: description and display_description"
                            tal:content="description" />
                  </a>
              </li>
          </ul>
      </tal:block>
  </tal:block>


  <tal:block condition="python: display == 'extended_site_map'">
    <tal:block
     define="show_icons ds/show_icons;
             show_icons python: int(show_icons);
             end_depth ds/end_depth;
             mdir here/portal_directories/members;
             mdir_id mdir/getId;
             display_managers ds/display_managers;
             display_managers python:int(display_managers) and mdir.isVisible();
             folderItems python: context.getNavigationItems(
                 root_uids=root_uids,
                 context_rpath=context_rpath,
                 context_obj=context,
                 contextual=0, expand=1,
                 end_depth=int(end_depth),
                 display_hidden_folders=display_hidden_folders,
                 display_managers=display_managers,
                 display_description=display_description,
                 authorized_only=authorized_only,
                 );
              linkclass python: show_icons and 'noicon' or None"
     condition="folderItems">
      <table class="listing" summary="Detailed site map">
        <thead>
          <tr>
            <td i18n:translate="">cpsportlets_extended_site_map_folder</td>
            <td tal:condition="display_description"
              i18n:translate="">cpsportlets_extended_site_map_description</td>
            <td tal:condition="display_managers"
              i18n:translate="">cpsportlets_extended_site_map_managers</td>
          </tr>
        </thead>
        <tbody>
          <tr tal:repeat="item folderItems">
            <td width="30%">
              <p tal:define="style string:margin-left:${item/depth}em"
              tal:attributes="style style">
              <a tal:omit-tag="not:item/visible"
                tal:attributes="href item/url;
                style style;
                class linkclass">
                <tal:block condition="show_icons"
                  content="structure item/icon_tag" />
                <tal:block content="item/title" />
            </a></p>
            </td>
            <td tal:condition="display_description" class="description"
              tal:content="item/description">Description</td>
            <td tal:condition="display_managers"
              tal:define="managers python:item['managers'];
              base_url utool/getBaseUrl;
              ">
              <ul class="cpsskinsMenu">
                <li tal:repeat="manager managers"><tal:block
                    tal:define="user
                    python:mdir.getEntry(manager, default=None)"
                    tal:condition="user">
                    <a href=""
                      tal:content="python:user.get('fullname', manager)"
                      tal:attributes="href
                      python:'%scpsdirectory_entry_view?dirname=%s&amp;id=%s' %
                      (base_url, mdir_id, manager);">Manager's fullname</a>
                </tal:block></li>
              </ul>
            </td>
          </tr>
        </tbody>
      </table>
    </tal:block>
  </tal:block>

  <tal:comment condition="nothing">
  The aim of this menu is to display folding branches of navigation items
  (but with no JavaScript) and to have an open branch only if it is leading
  to the current context.
  </tal:comment>
  <tal:block condition="python: display == 'collapsible_menu'">
    <tal:block
     define="show_icons ds/show_icons;
             show_icons python: int(show_icons);
             show_docs ds/show_docs;
             start_depth ds/start_depth;
             end_depth ds/end_depth;
             rel_depth ds/rel_depth;
             sort_by ds/sort_by|nothing;
             sort_direction ds/sort_direction|nothing;
             folderItems python: context.getNavigationItems(
                 root_uids=root_uids,
                 context_rpath=context_rpath,
                 context_obj=context,
                 start_depth=int(start_depth),
                 end_depth=int(start_depth)+1,
                 display_description=display_description,
                 display_hidden_folders=display_hidden_folders,
                 sort_by=sort_by,
                 sort_direction=sort_direction);
                 linkclass python: show_icons and 'noicon' or None;
        ">
      <tal:block condition="folderItems">
       <ul class="cpsskinsMenu">
        <li tal:repeat="item folderItems">
          <a tal:attributes="href item/url;
                             class linkclass">
            <tal:block condition="show_icons"
                       content="structure item/icon_tag" />
            <tal:block content="item/title" />
          </a>
          <tal:block condition="python:item['open']
                                or context_rpath.startswith(item['rpath'])"
                     define="subfolderItems python:context.getFolderItems(
                                            context_rpath=item['rpath'], show_docs=int(show_docs),
                                            sort_by=sort_by,
                                            display_hidden_folders=display_hidden_folders)"
                     repeat="subitem subfolderItems">
            <a style="margin-left: 1em"
               tal:attributes="href subitem/url;
                               class linkclass">
              <tal:block condition="show_icons"
                         content="structure subitem/icon_tag" />
              <tal:block content="subitem/title" />
              <span class="itemDescription"
               tal:define="description item/description"
               tal:condition="python: description and display_description"
               tal:content="description" />
            </a>
          </tal:block>
        </li>
      </ul>
     </tal:block>
    </tal:block>
  </tal:block>

  <tal:block condition="syndication_formats" define="path context_rpath">
    <metal:block use-macro="here/cpsportlet_macros/macros/xml_exports" />
  </tal:block>

</tal:block>

<tal:block tal:condition="export">
  <tal:block define="export_macro string:export_${export};
                     items python: context.getFolderItems(
                     context_rpath=request.form.get('path'),
                     show_docs=1, display_hidden_folders=0)">
    <metal:block use-macro="here/cpsportlet_macros/macros/?export_macro|
                            here/cpsportlet_macros/macros/export_not_implemented" />
  </tal:block>
</tal:block>

</tal:block>
